const express = require('express');
const multer = require('multer');
const path = require('path');
const Model = require('./Model');

const app = express();

// Configure storage for multer
const storage = multer.diskStorage({
    destination: (req, file, cb) => {
        cb(null, './uploads/');
    },
    filename: (req, file, cb) => {
        cb(null, Date.now() + path.extname(file.originalname));
    }
});

const uploader = multer({ storage: storage });

// Route to handle image uploads
app.post('/upload', uploader.fields([
    { name: 'image1', maxCount: 1 },
    { name: 'image2', maxCount: 1 },
    { name: 'image3', maxCount: 1 },
    { name: 'image4', maxCount: 1 }
]), async (req, res) => {
    try {
        const images = [
            req.files['image1'] ? req.files['image1'][0].filename : null,
            req.files['image2'] ? req.files['image2'][0].filename : null,
            req.files['image3'] ? req.files['image3'][0].filename : null,
            req.files['image4'] ? req.files['image4'][0].filename : null
        ];

        const product = new Model({ image: images });

        const savedProduct = await product.save();
        res.status(201).send(savedProduct);
    } catch (err) {
        console.error(err);
        res.status(500).send({ message: 'An error occurred while saving the product', error: err });
    }
});

// Start the server
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
});
